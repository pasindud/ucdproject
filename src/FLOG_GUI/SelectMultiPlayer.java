/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FLOG_GUI;
import FLOG_LOGIC.*;
import FLOG_LOGIC.Multiplayer;

import FLOG_LOGIC.Thrower;
import FLOG_LOGIC.ThrowListener;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

import java.util.ArrayList;
import java.util.List;

import java.*;
import javax.swing.JFrame;
import javax.swing.JPanel;


/**
 *
 * @author Pasindu
 */
public class SelectMultiPlayer extends JPanel {
    /** Name of the channel the user is hosting or joined. */
    public String channelName = null;
    /** Name of the player. */
    private String playerName = null;
    int posX=0,posY=0;

    Catcher catcher = new Catcher();
    Thrower thrower = new Thrower();
    List<String> playerNames = new ArrayList<String>();
    /**
     * Creates new form SelectMultiPlayer
     */
    public SelectMultiPlayer() {
        initComponents();
        thrower.addThrowListener(catcher);
        
        // Check run
        /*
        channelName = txtChannelName.getText();
        txtPlayerName.setText("pasindu");
        playerName = txtPlayerName.getText();
        multiplayer.joinNewPlayer(playerName, channelName);
        new Thread(new CheckQueueThread(multiplayer.getServerQueue(channelName), thrower)).start();
        */
    }
    
    Multiplayer multiplayer = new Multiplayer();
     
    public synchronized void decodeServerMessage(String message){
        String[] segments = message.split(" ");
        if (segments.length < 2) {
            return;
        }
        String code = segments[0];
        String content = segments[1];
        switch(code) {
            // New user joined formed 100 <player>,
            case "100": 
                setStatus("User " + content + " joined ");
                playerNames.add(content.trim());
            break;
        }
        
    }
    
    public class Catcher implements ThrowListener {
        @Override
        public void Catch(String message) {
            System.out.println("caught " + message);
            decodeServerMessage(message);
        }
    }
    
    private void startServerButtonMouseClicked(java.awt.event.MouseEvent evt) {
        channelName = txtChannelName.getText();
        multiplayer.createServer(channelName);
    }

    private void joinServerButtonActionClicked(java.awt.event.MouseEvent evt) {
        channelName = txtChannelName.getText();
        playerName = txtPlayerName.getText();
        multiplayer.joinNewPlayer(playerName, channelName);

        new Thread(new CheckQueueThread(multiplayer.getServerQueue(channelName), thrower)).start();
    }

    /**
     * Set the status from the queue reading.
     */
    public synchronized void setStatus(String status) {
        System.out.println("Set status " + status);
        String text = jTextPane2.getText();
        jTextPane2.setText(text += "\n" + status);
    }

      /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChannelName = new javax.swing.JTextPane();
        startServerButton = new javax.swing.JButton();
        joinServerButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPlayerName = new javax.swing.JTextPane();

        txtChannelName.setText("ChannelName");
        jScrollPane1.setViewportView(txtChannelName);

        startServerButton.setText("Start Server");
        startServerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startServerButtonMouseClicked(evt);
            }
        });

        joinServerButton.setText("Join Multiplayer");
        joinServerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinServerButtonActionClicked(evt);
            }
        });

        jButton1.setText("Start Game");

        jTextPane2.setText("Progress Info -");
        jTextPane2.setToolTipText("");
        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane3.setViewportView(txtPlayerName);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addComponent(startServerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(joinServerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(startServerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(joinServerButton)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(70, Short.MAX_VALUE))
        );
    }

   
    // Listen
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JButton joinServerButton;
    private javax.swing.JButton startServerButton;
    private javax.swing.JTextPane txtChannelName;
    private javax.swing.JTextPane txtPlayerName;
    // End of variables declaration//GEN-END:variables
}





